{"name":"Digit Recognition","tagline":"Handwritten Digit Recognition using OpenCV, sklearn and Python","body":"# Digit Recognition\r\nHandwritten Digit Recognition using OpenCV, sklearn and Python\r\n\r\n**Check out the blog post [here](http://hanzratech.in/python/handwritten-digit-recognition-using-opencv-sklearn-and-python/) for complete notes on how the code works.**\r\n\r\n# Dependencies\r\n1. `cv2`\r\n2. `sklearn`\r\n3. `skimage`\r\n4. `numpy`\r\n5. `collections`\r\n\r\n# Contents\r\nThis repository contains the following files-\r\n\r\n1. `generateClassifier.py` - Python Script to create the classifier file `digits_cls.pkl`.\r\n2. `performRecognition.py` - Python Script to test the classifier.\r\n3. `digits_cls.pkl` - Classifier file for digit recognition.\r\n4. `photo_1.jpg` - Test image number 1 to test the classifier\r\n5. `photo_2.jpg` - Test image numbre 2 to test the classifier\r\n\r\n## Usage \r\n\r\n* Clone the repository - \r\n```bash\r\ncd \r\ngit clone https://github.com/bikz05/digit-recognition.git\r\ncd digit-recognition\r\n```\r\n* The next step is to train the classifier. To do so run the script `generateClassifier.py`. It will produce the classifier named `digits_cls.pkl`. \r\n\r\n**NOTE** - *I have already created the `digits_cls.pkl`, so this step is not necessary.*\r\n```python\r\npython generateClassifier.py\r\n```\r\n* To test the classifier, run the `performRecognition.py` script.\r\n```python\r\npython performRecognition.py\r\n```\r\n\r\n## Results\r\n\r\n### Sample Image 1\r\n![Result Number 1](http://hanzratech.in/wp-content/uploads/2015/02/final_1.png)\r\n### Sample Image 2\r\n![Result Number 2](http://hanzratech.in/wp-content/uploads/2015/02/final2.png)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}